<?php

return <<<'VALUE'
"namespace IPS\\Theme;\nclass class_core_global_plugins extends \\IPS\\Theme\\Template\n{\n\t\t\tfunction AdminLoginBG_CSS(  ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !isset( \\IPS\\Request::i()->cookie['ipsthemesAdminLoginBG']) ):\n$return .= <<<CONTENT\n\n\tbody#elLogin {\n\t\tbackground: url(\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->ipsthemesAdminLoginBG_default;\n$return .= <<<CONTENT\n) no-repeat;\n\t\tbackground-size: cover;\n\t\tbackground-attachment: fixed;\n\t}\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\n$img = \\IPS\\Request::i()->cookie['ipsthemesAdminLoginBG'];\n$return .= <<<CONTENT\n\n\tbody#elLogin {\n\t\tbackground: url(\nCONTENT;\n$return .= htmlspecialchars( $img, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n) no-repeat;\n\t\tbackground-size: cover;\n\t\tbackground-attachment: fixed;\n\t}\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nforeach ( explode(',',\\IPS\\Settings::i()->ipsthemesAdminLoginBG_images) as $key => $img ):\n$return .= <<<CONTENT\n\n\tbody#elLogin[data-bg-img=\"\nCONTENT;\n$return .= htmlspecialchars( $img, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"] {\n\t\tbackground: url(\nCONTENT;\n$return .= htmlspecialchars( $img, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n) no-repeat;\n\t\tbackground-size: cover;\n\t\tbackground-attachment: fixed;\n\t}\t\t\n\tbody#elLogin[data-bg-img=\"\nCONTENT;\n$return .= htmlspecialchars( $img, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"] #ipsAdminLoginBGTrigger_dialog img[data-url=\"\nCONTENT;\n$return .= htmlspecialchars( $img, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"] {\n\t\topacity: 1;\n\t}\t\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\n\/* Temporarily moving this here due to a bug with plugin system not compiling CSS on admin login screen *\/\n#ipsAdminLoginBGTrigger {\n\tposition: fixed;\n\ttop: 15px;\n\tright: 15px;\n\tz-index: 9;\n\tpadding: 6px 15px;\n\tbackground: rgba(0, 0, 0, 0.8);\n\tcolor: white;\n\tborder-radius: 25px;\n\t-webkit-transition: background 100ms ease-in;\n\ttransition: background 100ms ease-in;\n}\n\n\t#ipsAdminLoginBGTrigger:hover {\n\t\tbackground: #963043;\n\t}\n\n\t@media (max-width: 768px) {\n\t\t#ipsAdminLoginBGTrigger {\n\t\t\ttop: 0;\n\t\t\tright: 0;\n\t\t\tpadding: 4px 15px;\n\t\t\tborder-radius: 0 0 0 4px;\n\t\t}\n\t}\n\n#ipsAdminLoginBG .ipsFieldRow {\n\tmargin-top: 15px;\n}\n\n.ipsAdminLoginBGGrid li {\n\tcursor: pointer;\n\tmargin-bottom: 0 !important;\n}\n\n\t@media (max-width: 768px) {\n\t\t.ipsAdminLoginBGGrid li {\n\t\t\twidth: 45% !important;\n\t\t\tmargin-left: 4% !important;\n\t\t\ttext-align: center;\n\t\t\tmargin-bottom: 15px !important;\n\t\t}\n\t}\n\n\t@media (max-width: 480px) {\n\t\t.ipsAdminLoginBGGrid li {\n\t\t\twidth: 45% !important;\n\t\t\tmargin-left: 4% !important;\n\t\t\ttext-align: center;\n\t\t\tmargin-bottom: 15px !important;\n\t\t}\n\t}\n\n\t.ipsAdminLoginBGGrid img {\n\t\twidth: 100%;\n\t\theight: 100px;\n\t\topacity: .7;\n\t\tborder-radius: 4px;\n\t\t-webkit-transition: opacity 100ms ease-in;\n\t\ttransition: opacity 100ms ease-in;\n\t}\n\n\t\t@media (max-width: 768px) {\n\t\t\t.ipsAdminLoginBGGrid img {\n\t\t\t\theight: 120px;\n\t\t\t}\n\t\t}\n\n\t\t@media (max-width: 480px) {\n\t\t\t.ipsAdminLoginBGGrid img {\n\t\t\t\theight: 100px;\n\t\t\t}\n\t\t}\n\n\t.ipsAdminLoginBGGrid li:hover img {\n\t\topacity: .9;\n\t}\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_AdminLoginBG_CSS\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction Countdown( $title, $time, $timezone, $finishedMessage, $unitBgColor, $unitTxtColor, $orientation='horizontal' ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\r\n<h3 class='ipsType_reset ipsWidget_title' \nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->timezone !== $timezone ):\n$return .= <<<CONTENT\ndata-ipstooltip title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'timezone', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n: \nCONTENT;\n$return .= htmlspecialchars( $timezone, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\nCONTENT;\n$return .= htmlspecialchars( $title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h3>\r\n<div class='ipsWidget_inner ipsType_bold ipsType_center \nCONTENT;\n\nif ( $orientation == \"vertical\" ):\n$return .= <<<CONTENT\nipsPad \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\r\n  \nCONTENT;\n\nif ( $time ):\n$return .= <<<CONTENT\n\r\n  <div class='ipsGrid'>\r\n    \nCONTENT;\n\nforeach ( $time as $times ):\n$return .= <<<CONTENT\n\r\n    <div class='\nCONTENT;\n\nif ( $orientation == \"vertical\" ):\n$return .= <<<CONTENT\nipsGrid_span3 \nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n ipsGrid_span2 \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\r\n      <p class=\"ipsWidget_countdown_unit\" style=\"background: \nCONTENT;\n$return .= htmlspecialchars( $unitBgColor, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n; color: \nCONTENT;\n$return .= htmlspecialchars( $unitTxtColor, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n;\">\nCONTENT;\n$return .= htmlspecialchars( $times['number'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\r\n      <p style=\"margin-top:2px;\">\nCONTENT;\n$return .= htmlspecialchars( $times['lang'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\r\n    <\/div>\r\n    \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\r\n  <\/div>\r\n  \nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\r\n  \nCONTENT;\n$return .= htmlspecialchars( $finishedMessage, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\r\n  \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n<\/div>\r\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_Countdown\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction WaRepAll(  ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\IPS\\Settings::i()->waRepToAllGroups == '*' || \\IPS\\Member::loggedIn()->inGroup( explode(\",\", \\IPS\\Settings::i()->waRepToAllGroups) ) ):\n$return .= <<<CONTENT\n\n<li class='wa_rep_all'>\n        \nCONTENT;\n\n$member = \\IPS\\Member::loggedIn();\n$return .= <<<CONTENT\n\n    \t\nCONTENT;\n\nif ( $member->member_id ):\n$return .= <<<CONTENT\n\n        <a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=profile&id={$member->member_id}&do=reputation\", null, \"profile_reputation\", array( $member->members_seo_name ), 0 ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip _title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'reputation_badge_tooltip', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'\">\n         <span class=\"\nCONTENT;\n\nif ( $member->pp_reputation_points > 0 ):\n$return .= <<<CONTENT\nwa_rep_all_green\nCONTENT;\n\nelseif ( $member->pp_reputation_points < 0 ):\n$return .= <<<CONTENT\nwa_rep_all_red\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nwa_rep_all_white\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\"><i class='fa \nCONTENT;\n\nif ( $member->pp_reputation_points > 0 ):\n$return .= <<<CONTENT\nfa-plus-circle\nCONTENT;\n\nelseif ( $member->pp_reputation_points < 0 ):\n$return .= <<<CONTENT\nfa-minus-circle\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\nfa-circle\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'><\/i> \nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->pp_reputation_points, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/span>\n     <\/a>\n        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n        \n<\/li>\n<li class='elUserNav_sep'><\/li>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_WaRepAll\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction avgContentPerDay( $member, $contentCount ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n<li>\n\t\t\t\t<h4 class='ipsType_minorHeading'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'avgcontentperday_namestring', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h4>\n\t\t\t\t\nCONTENT;\n$return .= htmlspecialchars( $contentCount, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n\t\t\t<\/li>\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_avgContentPerDay\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction bnHeaderMessage(  ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\IPS\\Settings::i()->bnHeaderMessage_visible ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->bnHeaderMessage_groups == 'all' or \\IPS\\Member::loggedIn()->inGroup( explode(',', \\IPS\\Settings::i()->bnHeaderMessage_groups ) ) ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->bnHeaderMessage_format == 4 ):\n$return .= <<<CONTENT\n\n\t\t\t<div id=\"bnHeaderMessage\" class='bnHeaderMessage_custom ipsType_blendLinks \nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Settings::i()->bnHeaderText_align, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\n\t\t\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->bnHeaderMessage_icon ):\n$return .= <<<CONTENT\n<span class=\"bnHeaderMessage_icon\"><i class='fa \nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Settings::i()->bnHeaderMessage_icon, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'><\/i><\/span> \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<span class=\"bnHeaderMessage_title\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bnHeaderMessage_content_value', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span>\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->bnHeaderMessage_format == 0 ):\n$return .= <<<CONTENT\n\n\t\t\t<div id=\"bnHeaderMessage\" class=\"ipsMessage ipsMessage_info\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bnHeaderMessage_content_value', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->bnHeaderMessage_format == 1 ):\n$return .= <<<CONTENT\n\n\t\t\t<div id=\"bnHeaderMessage\" class=\"ipsMessage ipsMessage_error\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bnHeaderMessage_content_value', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->bnHeaderMessage_format == 2 ):\n$return .= <<<CONTENT\n\n\t\t\t<div id=\"bnHeaderMessage\" class=\"ipsMessage ipsMessage_warning\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bnHeaderMessage_content_value', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->bnHeaderMessage_format == 3 ):\n$return .= <<<CONTENT\n\n\t\t\t<div id=\"bnHeaderMessage\" class=\"ipsMessage ipsMessage_success\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bnHeaderMessage_content_value', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_bnHeaderMessage\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction boardlifeStatus(  ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$time = \\IPS\\Settings::i()->board_start;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n$s    = date('F d, Y H:i:s', $time);\n$return .= <<<CONTENT\n\n\nCONTENT;\n\n$d    = array('time'  => $s);\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\nif ( \\IPS\\Settings::i()->liveB_enable == 1 AND !\\IPS\\Member::loggedIn()->inGroup(explode(',', \\IPS\\Settings::i()->liveB_g ) ) ):\n$return .= <<<CONTENT\n\n\n<div class='ipsGrid ipsGrid_collapseTablet ipsGrid_collapsePhone ipsPad ipsBox ipsClearfix ipsSpacer_both'>\n    <h3 class='ipsType_reset'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bl_status', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n    <br>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bl_startup', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $d['time'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\n    <div id=\"age\" data-age=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'bl_age', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\">\n        <div id=\"counter\" data-startup=\"\nCONTENT;\n$return .= htmlspecialchars( $d['time'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\"><\/div>\n    <\/div>\n<\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_boardlifeStatus\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction logReviewVoters( $review, $table ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n{$table}\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_logReviewVoters\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction logRowsReviewVoters( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$review = \\IPS\\downloads\\File\\Review::load( \\IPS\\Request::i()->rid );\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nforeach ( $rows as $row ):\n$return .= <<<CONTENT\n\n\t<li class='ipsGrid_span12 ipsPhotoPanel ipsPhotoPanel_mini ipsClearfix ipsPad_half'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( \\IPS\\Member::load( $row['member_id'] ), 'mini' );\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsPos_right\">\n\t\t\t\nCONTENT;\n\n$votes = json_decode( $review->mapped('votes_data'), TRUE );\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nif ( $votes[ $row['member_id'] ] == 1 ):\n$return .= <<<CONTENT\n\n\t\t\t\t<span title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'useful', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class='ipsButton ipsButton_large ipsButton_important ipsButton_primary'>\n\t\t\t\t<i class=\"fa fa-thumbs-up fa-2x\"><\/i>\n\t\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t\t\t<span title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'not_useful', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class='ipsButton ipsButton_large ipsButton_disabled ipsButton_primary'>\n\t\t\t\t<i class=\"fa fa-thumbs-down fa-2x\"><\/i>\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t<\/span>\n\t\t<\/div>\n\t\t<div>\n\t\t\t<h3 class='ipsType_normal ipsType_reset ipsTruncate ipsTruncate_line'>\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::load( $row['member_id'] )->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t<span class='ipsType_light'>\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member\\Group::load( $row['member_group_id'] )->formattedName;\n$return .= <<<CONTENT\n\n\t\t\t<\/span>\n\t\t<\/div>\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_logRowsReviewVoters\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction logTableReviewVoters( $table, $headers, $rows, $quickSearch ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n<div data-baseurl='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-resort='\nCONTENT;\n$return .= htmlspecialchars( $table->resortKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-controller='core.global.core.table' \nCONTENT;\n\nif ( $table->getPaginationKey() != 'page' ):\n$return .= <<<CONTENT\ndata-pageParam='\nCONTENT;\n$return .= htmlspecialchars( $table->getPaginationKey(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\n\t\nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n\t\t\t<div data-role=\"tablePagination\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit, TRUE, $table->getPaginationKey() );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\n\t\nCONTENT;\n\nif ( count( $rows ) ):\n$return .= <<<CONTENT\n\n\t\t<ol class='ipsGrid ipsGrid_collapsePhone ipsPad ipsClear \nCONTENT;\n\nforeach ( $table->classes as $class ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n' id='elTable_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role=\"tableRows\" itemscope itemtype=\"http:\/\/schema.org\/ItemList\">\n\t\t\t\nCONTENT;\n\n$return .= $table->rowsTemplate[0]->{$table->rowsTemplate[1]}( $table, $headers, $rows );\n$return .= <<<CONTENT\n\n\t\t<\/ol>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_center ipsPad'>\n\t\t\t<p class='ipsType_large ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_rows_in_table', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\nCONTENT;\n\nif ( method_exists( $table, 'container' ) AND $table->container() !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $table->container()->can('add') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $table->container()->url()->setQueryString( 'do', 'add' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_primary ipsButton_medium'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'submit_first_row', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/a>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\n\t\nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n\t\t\t<div data-role=\"tablePagination\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit, TRUE, $table->getPaginationKey() );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_logTableReviewVoters\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction memberStatusPersonalCard( $member ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $member->mod_posts ):\n$return .= <<<CONTENT\n\n\t<li class=\"ipsDataItem\">\n\t\t<span class=\"ipsDataItem_generic ipsDataItem_size3\"><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_restriction', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/span>\n\t\t<span data-ipsTooltip title=\"\nCONTENT;\n\nif ( $member->mod_posts == -1 ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_modq_perm', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array(\\IPS\\DateTime::ts( $member->mod_posts )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_modq_temp', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" class=\"ipsDataItem_main\"><span class=\"ipsBadge ipsBadge_style6\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_modq', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span><\/span>\n\t<\/li>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $member->restrict_post ):\n$return .= <<<CONTENT\n\n\t<li class=\"ipsDataItem\">\n\t\t<span class=\"ipsDataItem_generic ipsDataItem_size3\"><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_restriction', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/span>\n\t\t<span data-ipsTooltip title=\"\nCONTENT;\n\nif ( $member->restrict_post == -1 ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_nopost_perm', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array(\\IPS\\DateTime::ts( $member->restrict_post )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_nopost_temp', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" class=\"ipsDataItem_main\"><span class=\"ipsBadge ipsBadge_style3\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_nopost', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span><\/span>\n\t<\/li>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $member->temp_ban ):\n$return .= <<<CONTENT\n\n\t<li class=\"ipsDataItem\">\n\t\t<span class=\"ipsDataItem_generic ipsDataItem_size3\"><strong>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'member_restriction', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/strong><\/span>\n\t\t<span data-ipsTooltip title=\"\nCONTENT;\n\nif ( $member->temp_ban == -1 ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_banned_perm', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array(\\IPS\\DateTime::ts( $member->temp_ban )); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_banned_temp', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" class=\"ipsDataItem_main\"><span class=\"ipsBadge ipsBadge_style5\">\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'moderation_banned', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/span><\/span>\n\t<\/li>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_memberStatusPersonalCard\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction myactivityuserbar(  ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$member = \\IPS\\Member::loggedIn();\n$return .= <<<CONTENT\n\n<li class=\"ipsMenu_item\">\n\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=profile&do=content&id={$member->member_id}\", \"front\", \"profile_content\", array( $member->members_seo_name ), 0 ) );\n$return .= <<<CONTENT\n'>\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'userbar_my_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\n<\/li>\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_myactivityuserbar\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction pmNotice(  ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n<div class='ipsMessage ipsMessage_warning'>\n    \nCONTENT;\n\n$return .= \\IPS\\Settings::i()->pmNotice_msg;\n$return .= <<<CONTENT\n\n<\/div>\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_pmNotice\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction reviewVotersLink( $rid, $fid ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$newFile  = \\IPS\\downloads\\File::load( $fid );\n$return .= <<<CONTENT\n\r\n\nCONTENT;\n\nif ( ( \\IPS\\Settings::i()->reviewVoters_author AND \\IPS\\Member::loggedIn()->member_id == $newFile->mapped('author') ) OR ( \\IPS\\Member::loggedIn()->inGroup( explode( ',', \\IPS\\Settings::i()->reviewVoters_groups ) ) OR \\IPS\\Settings::i()->reviewVoters_groups == 'all') ):\n$return .= <<<CONTENT\n\r\n\nCONTENT;\n\n$seoTitle = \\IPS\\Http\\Url::seoTitle( $newFile->mapped('title') );\n$return .= <<<CONTENT\n\r\n  [ <a href='\nCONTENT;\n$return .= htmlspecialchars( $newFile->url()->setQueryString( array( 'do' => 'voters', 'rid' => $rid, 'fid' => $fid  ) ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-size='narrow' data-ipsDialog-modal='true' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_voters', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_voters', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a> ]\r\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_reviewVotersLink\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction signupMessage(  ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\IPS\\Settings::i()->signupMessage_visible ):\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->signupMessage_content ):\n$return .= <<<CONTENT\n\n\t\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->signupMessage_format == 0 ):\n$return .= <<<CONTENT\n\n\t\t\t<div id=\"signupMessage\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->signupMessage_content;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->signupMessage_format == 1 ):\n$return .= <<<CONTENT\n\n\t\t\t<div id=\"signupMessage\" class=\"signupMessageFormatted ipsMessage ipsMessage_info\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->signupMessage_content;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->signupMessage_format == 2 ):\n$return .= <<<CONTENT\n\n\t\t\t<div id=\"signupMessage\" class=\"signupMessageFormatted ipsMessage ipsMessage_error\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->signupMessage_content;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->signupMessage_format == 3 ):\n$return .= <<<CONTENT\n\n\t\t\t<div id=\"signupMessage\" class=\"signupMessageFormatted ipsMessage ipsMessage_warning\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->signupMessage_content;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->signupMessage_format == 4 ):\n$return .= <<<CONTENT\n\n\t\t\t<div id=\"signupMessage\" class=\"signupMessageFormatted ipsMessage ipsMessage_success\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->signupMessage_content;\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_signupMessage\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction siteMessage(  ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\r\n\nCONTENT;\n\nif ( \\IPS\\Settings::i()->siteMessage_content and (\\IPS\\Settings::i()->siteMessage_groups == '*' or \\IPS\\Member::loggedIn()->inGroup(explode(',', \\IPS\\Settings::i()->siteMessage_groups))) and !(\\IPS\\Settings::i()->siteMessage_allowDismiss and \\IPS\\Member::loggedIn()->siteMessage_dismissed) and !(\\IPS\\Settings::i()->siteMessage_allowDismiss and isset( \\IPS\\Request::i()->cookie['siteMessage_dismissed'] )) ):\n$return .= <<<CONTENT\n\r\n  \nCONTENT;\n\nif ( \\IPS\\Settings::i()->siteMessage_style == 1 ):\n$return .= <<<CONTENT\n\r\n    \nCONTENT;\n\n$message_style = \"info\";\n$return .= <<<CONTENT\n\r\n  \nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->siteMessage_style == 2 ):\n$return .= <<<CONTENT\n\r\n    \nCONTENT;\n\n$message_style = \"success\";\n$return .= <<<CONTENT\n\r\n  \nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->siteMessage_style == 3 ):\n$return .= <<<CONTENT\n\r\n    \nCONTENT;\n\n$message_style = \"warning\";\n$return .= <<<CONTENT\n\r\n  \nCONTENT;\n\nelseif ( \\IPS\\Settings::i()->siteMessage_style == 4 ):\n$return .= <<<CONTENT\n\r\n    \nCONTENT;\n\n$message_style = \"alert\";\n$return .= <<<CONTENT\n\r\n  \nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\r\n    \nCONTENT;\n\n$message_style = \"general\";\n$return .= <<<CONTENT\n\r\n  \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n    <div class=\"ipsMessage ipsSpacer_bottom siteMessage siteMessage_\nCONTENT;\n$return .= htmlspecialchars( $message_style, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nif ( \\IPS\\Settings::i()->siteMessage_icon == '*' ):\n$return .= <<<CONTENT\nsiteMessage_noIcon\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= \\IPS\\Settings::i()->siteMessage_icon;\n$return .= <<<CONTENT\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\" \nCONTENT;\n\nif ( \\IPS\\Settings::i()->siteMessage_allowDismiss ):\n$return .= <<<CONTENT\ndata-controller=\"plugins.siteMessageDismiss\"\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\r\n      \nCONTENT;\n\nif ( \\IPS\\Settings::i()->siteMessage_allowDismiss ):\n$return .= <<<CONTENT\n\r\n\t\t    <a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&section=plugins&do=dismissSiteMessage\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"\", array(), 0 ) );\n$return .= <<<CONTENT\n\" class=\"ipsType_blendlinks ipsPos_right\" data-action=\"dismiss\"><i class=\"fa fa-times\"><\/i><\/a>\r\n      \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n      <div>\r\n\t\t      \nCONTENT;\n\n$return .= \\IPS\\Settings::i()->siteMessage_content;\n$return .= <<<CONTENT\n\r\n      <\/div>\r\n\t  <\/div>\r\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_siteMessage\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction sodPhpWidget( $title, $content, $desc, $orientation='vertical' ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $title != null ):\n$return .= <<<CONTENT\n\n\t<h3 class='ipsType_reset ipsWidget_title'>$title<\/h3>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsWidget_inner \nCONTENT;\n\nif ( $orientation == 'vertical' ):\n$return .= <<<CONTENT\nipsPad\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\nCONTENT;\n\nif ( $desc != null ):\n$return .= <<<CONTENT\n\n\t\t<span class='ipsType_light ipsType_unbold ipsType_medium'>$desc<\/span>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $content != null ):\n$return .= <<<CONTENT\n\n\t\t<p class='ipsType_reset ipsType_medium ipsType_light'>{$content}<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_sodPhpWidget\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction sodTxtWidget( $title, $content, $desc, $orientation='vertical' ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $title != null ):\n$return .= <<<CONTENT\n\n\t<h3 class='ipsType_reset ipsWidget_title'>$title<\/h3>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<div class='ipsWidget_inner \nCONTENT;\n\nif ( $orientation == 'vertical' ):\n$return .= <<<CONTENT\nipsPad\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n\t\nCONTENT;\n\nif ( $desc != null ):\n$return .= <<<CONTENT\n\n\t\t<span class='ipsType_light ipsType_unbold ipsType_medium'>$desc<\/span>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\nCONTENT;\n\nif ( $content != null ):\n$return .= <<<CONTENT\n\n\t\t<p class='ipsType_reset ipsType_medium ipsType_light'>{$content}<\/p>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_sodTxtWidget\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction staffMembers( $users, $onlineCount, $orientation='vertical' ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( $orientation == 'vertical' ):\n$return .= <<<CONTENT\n\n    \nCONTENT;\n\nforeach ( $users as $user ):\n$return .= <<<CONTENT\n\n        \nCONTENT;\n\nif ( $user->member()->isOnline() ):\n$return .= <<<CONTENT\n\n            <li class='ipsDataItem \nCONTENT;\n\nif ( $orientation == 'horizontal' ):\n$return .= <<<CONTENT\nipsGrid_span3\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n'>\n                <div class='ipsDataItem_icon ipsPos_top'>\n                    \nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $user->member(), 'tiny' );\n$return .= <<<CONTENT\n\n                <\/div>\n                <div class=\"ipsDataItem_main\">\n                    <h3 class='ipsType_sectionHead'>\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->language()->checkKeyExists( \"core_staff_directory_name_{$user->id}\" ) ):\n$return .= <<<CONTENT\n<a href='\nCONTENT;\n$return .= htmlspecialchars( $user->member()->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"core_staff_directory_name_{$user->id}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n{$user->member()->link()}\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/h3>\n                    <p class='ipsType_reset ipsType_normal ipsType_light'>\n                         \nCONTENT;\n\n$return .= \\IPS\\Member\\Group::load( $user->member()->member_group_id )->formattedName;\n$return .= <<<CONTENT\n\n                         <span class=\"ipsPos_right\">\n                             \nCONTENT;\n\nif ( !\\IPS\\Member::loggedIn()->members_disable_pm AND !$user->member()->members_disable_pm ):\n$return .= <<<CONTENT\n\n                                  <a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=messaging&controller=messenger&do=compose&to={$user->member()->member_id}\", null, \"messenger_compose\", array(), 0 ) );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'compose_new', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-forceReload data-ipsDialog-remoteSubmit data-ipsDialog-flashMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'message_sent', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><i class='fa fa-envelope'><\/i> <\/a>\n                             \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                         <\/span>\n                    <\/p>\n                <\/div>\n            <\/li>\n        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n    \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n    \nCONTENT;\n\nforeach ( $users as $user ):\n$return .= <<<CONTENT\n\n        <div class='ipsGrid_span3'>\n            \nCONTENT;\n\nif ( $user->member()->isOnline() ):\n$return .= <<<CONTENT\n\n                <div class='ipsDataItem_icon ipsPos_top'>\n                    \nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $user->member(), 'tiny' );\n$return .= <<<CONTENT\n\n                <\/div>\n                <div class=\"ipsDataItem_main\">\n                    <h3 class='ipsType_sectionHead'>\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->language()->checkKeyExists( \"core_staff_directory_name_{$user->id}\" ) ):\n$return .= <<<CONTENT\n<a href='\nCONTENT;\n$return .= htmlspecialchars( $user->member()->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\n$val = \"core_staff_directory_name_{$user->id}\"; $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( $val, \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/a>\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n{$user->member()->link()}\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n<\/h3>\n                    <p class='ipsType_reset ipsType_normal ipsType_light'>\n                        \nCONTENT;\n\n$return .= \\IPS\\Member\\Group::load( $user->member()->member_group_id )->formattedName;\n$return .= <<<CONTENT\n\n                        <span class=\"ipsPos_right\">\n                            \nCONTENT;\n\nif ( !\\IPS\\Member::loggedIn()->members_disable_pm AND !$user->member()->members_disable_pm ):\n$return .= <<<CONTENT\n\n                                <a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=messaging&controller=messenger&do=compose&to={$user->member()->member_id}\", null, \"messenger_compose\", array(), 0 ) );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'compose_new', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-forceReload data-ipsDialog-remoteSubmit data-ipsDialog-flashMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'message_sent', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><i class='fa fa-envelope'><\/i> <\/a>\n                            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                        <\/span>\n                    <\/p>\n                 <\/div>\n            \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n        <\/div>\n     \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\n\n\n\n\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_staffMembers\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction staffOnline( $groups, $userIsStaff=FALSE, $onlineCount, $orientation='vertical' ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( !empty( $onlineCount )  ):\n$return .= <<<CONTENT\n\n    <h3 class='ipsType_reset ipsWidget_title'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'block_staffOnline', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/h3>\n    <div class='ipsWidget_inner'>\n        \nCONTENT;\n\nif ( $orientation == 'vertical' ):\n$return .= <<<CONTENT\n\n        <div class='ipsPad_half ipsBox'>\n            <ul class='ipsDataList ipsDataList_reducedSpacing'>\n                \nCONTENT;\n\nforeach ( $groups as $group ):\n$return .= <<<CONTENT\n\n                    \nCONTENT;\n\nif ( count( $group->members() ) ):\n$return .= <<<CONTENT\n\n                        \nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"plugins\", \"core\", 'global' )->staffMembers( $group->members(), $onlineCount, $orientation='vertical' );\n$return .= <<<CONTENT\n\n                    \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n                \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n            <\/ul>\n        <\/div>\n        \nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n        <div class='ipsGrid ipsGrid_collapsePhone'>\n            \nCONTENT;\n\nforeach ( $groups as $group ):\n$return .= <<<CONTENT\n\n                \nCONTENT;\n\nif ( count( $group->members() ) ):\n$return .= <<<CONTENT\n\n                    \nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"plugins\", \"core\", 'global' )->staffMembers( $group->members(), $onlineCount, $orientation );\n$return .= <<<CONTENT\n\n                \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n            \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\n        <\/div>\n        \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n    <\/div>\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_staffOnline\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction telegramShareLink( $url, $title ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n<a href=\"https:\/\/telegram.me\/share\/url?url=\nCONTENT;\n$return .= htmlspecialchars( $url, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n&amp;text=\nCONTENT;\n$return .= htmlspecialchars( $title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"cShareLink cShareLink_telegram\" target=\"_blank\" data-role=\"shareLink\" title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'telegram_text', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsTooltip>\r\n\t<i class=\"fa fa-paper-plane\"><\/i>\r\n<\/a>\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_telegramShareLink\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction uopb( $comment, $member ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\n$addWarningUrl = \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=warnings&do=warn&id={$member->member_id}\", 'front', 'warn_add', array( $member->members_seo_name ) );\n$return .= <<<CONTENT\n\r\n\nCONTENT;\n\n$wr = base64_encode( json_encode( array( 'app' => 'forums', 'module' => 'forums-comment' , 'id_1' => $comment->topic_id, 'id_2' => $comment->pid ) ) );\n$return .= <<<CONTENT\n\r\n\nCONTENT;\n\n$addWarningUrl = $addWarningUrl->setQueryString( 'ref', $wr );\n$return .= <<<CONTENT\n\r\n\r\n<ul class=\"ipsList_inline ipsType_blendLinks ipsSpacer_top\">\r\n\t\nCONTENT;\n\nif ( !$member->members_disable_pm and !\\IPS\\Member::loggedIn()->members_disable_pm and \\IPS\\Member::loggedIn()->canAccessModule( \\IPS\\Application\\Module::get( 'core', 'messaging' ) ) ):\n$return .= <<<CONTENT\n\r\n\t\t<li data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'message_send', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class=\"ipsType_light\">\r\n\t\t\t<a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=messaging&controller=messenger&do=compose&to={$member->member_id}&fromPost={$comment->pid}\", null, \"messenger_compose\", array(), 0 ) );\n$return .= <<<CONTENT\n' data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'compose_new', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n' data-ipsDialog-remoteSubmit data-ipsDialog-flashMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'message_sent', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" data-ipsDialog-forceReload><i class='fa fa-envelope'><\/i><\/a>\r\n\t\t<\/li>\r\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n\t\nCONTENT;\n\nif ( \\IPS\\Settings::i()->uopbShowIgnore AND \\IPS\\Member::loggedIn()->member_id && $member->member_id != \\IPS\\Member::loggedIn()->member_id ):\n$return .= <<<CONTENT\n\r\n\t\t<li data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'add_ignore', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class=\"ipsType_light\">\r\n\t\t\t<a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=ignore&id={$member->member_id}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"ignore\", array(), 0 ) );\n$return .= <<<CONTENT\n\"><i class='fa fa-times-circle'><\/i><\/a>\r\n\t\t<\/li>\r\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n\t<li data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'find_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class=\"ipsType_light\">\r\n\t\t<a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=profile&do=edit&id={$member->member_id}\", \"front\", \"profile_content\", array( $member->members_seo_name ), 0 ) );\n$return .= <<<CONTENT\n\"><i class='fa fa-search'><\/i><\/a>\r\n\t<\/li>\r\n\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->modPermission('can_flag_as_spammer') and $member->member_id != \\IPS\\Member::loggedIn()->member_id and !$member->modPermission() and !$member->isAdmin() ):\n$return .= <<<CONTENT\n\r\n\t\t\nCONTENT;\n\nif ( $member->members_bitoptions['bw_is_spammer'] ):\n$return .= <<<CONTENT\n\r\n\t\t\t<li data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'spam_unflag', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class=\"ipsType_light\"><a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=moderation&id={$member->member_id}&s=0&referrer={$referrer}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"flag_as_spammer\", array( $member->members_seo_name ), 0 ) );\n$return .= <<<CONTENT\n' data-confirm data-confirmSubMessage=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'spam_unflag_confirm', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\"><i class=\"fa fa-flag\"><\/i><\/a><\/li>\r\n\t\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\r\n\t\t\t<li data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'spam_flag', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class=\"ipsType_light\"><a href='\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=moderation&id={$member->member_id}&s=1&referrer={$referrer}\" . \"&csrfKey=\" . \\IPS\\Session::i()->csrfKey, null, \"flag_as_spammer\", array( $member->members_seo_name ), 0 ) );\n$return .= <<<CONTENT\n' data-confirm><i class=\"fa fa-flag\"><\/i><\/a><\/li>\r\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n\t\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->canWarn( $member ) ):\n$return .= <<<CONTENT\n\r\n\t\t<li data-ipsTooltip title=\"\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warn_user_title', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\" class=\"ipsType_light\"><a href=\"\nCONTENT;\n$return .= htmlspecialchars( $addWarningUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" data-ipsDialog data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'warn_user', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'><i class=\"fa fa-exclamation-triangle\"><\/i><\/a><\/li>\r\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n<\/ul>\r\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_uopb\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction userBlock( $configuration ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->inGroup( $configuration['userBlock_groups'], TRUE ) || $configuration['userBlock_groups'] == \"all\" ):\n$return .= <<<CONTENT\n\r\n\t\nCONTENT;\n\n$member = \\IPS\\Member::loggedIn();\n$return .= <<<CONTENT\n\r\n\t\nCONTENT;\n\n$coverPhoto = \\IPS\\Member::loggedIn()->coverPhoto();\n$return .= <<<CONTENT\n\r\n\t<div class=\"userBlock\">        \t\r\n\t\t\nCONTENT;\n\nif ( $coverPhoto->file ):\n$return .= <<<CONTENT\n\r\n\t\t\t<div class=\"userBlock_coverPhoto overlay\">\r\n\t\t\t\t<img src='\nCONTENT;\n$return .= htmlspecialchars( $coverPhoto->file->url, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsCoverPhoto_photo' alt=''>\r\n\t\t\t<\/div>\r\n\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n\t\t<div class=\"userBlock_avatar\nCONTENT;\n\nif ( $coverPhoto->file ):\n$return .= <<<CONTENT\n withCover\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\">  \r\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( $member, 'medium' );\n$return .= <<<CONTENT\n \r\n\t\t<\/div>\r\n\t\t<div class=\"userBlock_info\">   \r\n\t\t\t<div class=\"userBlock_name\">\r\n\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $member->url(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'view_my_profile', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\nCONTENT;\n\nif ( isset( $_SESSION['logged_in_as_key'] ) ):\n$return .= <<<CONTENT\n\nCONTENT;\n\n$sprintf = array($_SESSION['logged_in_from']['name']); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'front_logged_in_as', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::loggedIn()->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/a>\r\n\r\n\t\t\t\t\nCONTENT;\n\nif ( $member->member_title && $member->member_id ):\n$return .= <<<CONTENT\n\r\n\t\t\t\t\t<p>\nCONTENT;\n$return .= htmlspecialchars( $member->member_title, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\r\n\t\t\t\t\nCONTENT;\n\nelseif ( $member->rank['title'] && $member->member_id ):\n$return .= <<<CONTENT\n\r\n\t\t\t\t\t<p>\nCONTENT;\n$return .= htmlspecialchars( $member->rank['title'], ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/p>\r\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n\t\t\t<\/div>\r\n\r\n\t\t\t<div class=\"userBlock_counters\">\r\n                \nCONTENT;\n\nif ( \\IPS\\Member::loggedIn()->member_id  ):\n$return .= <<<CONTENT\n\r\n                    \nCONTENT;\n\n$posts = number_format($member->member_posts);\n$return .= <<<CONTENT\n\r\n                    \nCONTENT;\n\n$reputation = number_format($member->pp_reputation_points);\n$return .= <<<CONTENT\n\r\n                \r\n                    <a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=profile&do=content&id={$member->member_id}\", \"front\", \"profile_content\", array( $member->members_seo_name ), 0 ) );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n\n$sprintf = array($member->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_content', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip>\r\n                        \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'userBlock_postCount', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $posts, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\r\n                    <\/a>\r\n                    <a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=members&controller=profile&id={$member->member_id}&do=reputation\", null, \"profile_reputation\", array( $member->members_seo_name ), 0 ) );\n$return .= <<<CONTENT\n\" title=\"\nCONTENT;\n\n$sprintf = array($member->name); $return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'members_reputation', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), FALSE, array( 'sprintf' => $sprintf ) );\n$return .= <<<CONTENT\n\" data-ipsTooltip>\r\n                        \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'userBlock_reputaionPoints', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n \nCONTENT;\n$return .= htmlspecialchars( $reputation, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\r\n                    <\/a>\r\n                \nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\r\n                    <a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=login\", null, \"login\", array(), \\IPS\\Settings::i()->logins_over_https ) );\n$return .= <<<CONTENT\n\">\r\n                        \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'login', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\r\n                    <\/a>\r\n                    <a href=\"\nCONTENT;\n\n$return .= str_replace( '&', '&amp;', \\IPS\\Http\\Url::internal( \"app=core&module=system&controller=register\", null, \"register\", array(), 0 ) );\n$return .= <<<CONTENT\n\">\r\n                        \nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'sign_up', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\r\n                    <\/a>\r\n                \nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t<\/div>\r\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_userBlock\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction whoReadTheTopic( $topic ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nif ( ( \\IPS\\Settings::i()->topicViewed_canViewList === '*' OR \\IPS\\Member::loggedIn()->inGroup( explode( ',', \\IPS\\Settings::i()->topicViewed_canViewList ) ) ) AND ( \\IPS\\Settings::i()->topicViewed_forums === '0' OR in_array( $topic->forum_id, explode( ',', \\IPS\\Settings::i()->topicViewed_forums ) ) ) ):\n$return .= <<<CONTENT\n\r\n\t<li>\r\n\t\t<a href=\"\nCONTENT;\n$return .= htmlspecialchars( $topic->url()->setQueryString( 'do', 'readers' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n\" class=\"ipsButton ipsButton_medium ipsButton_primary ipsButton_fullWidth\" title=\"\" data-ipsDialog data-ipsDialog-size='medium' data-ipsDialog-modal='true' data-ipsDialog-title='\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'whoreadthistopic', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n'>\r\n\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'whoreadthistopic', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\r\n\t\t<\/a>\r\n\t<\/li>\r\n\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_whoReadTheTopic\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction whoReadTheTopicGeneral( $table ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n{$table}\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_whoReadTheTopicGeneral\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction whoReadTheTopicRows( $table, $headers, $rows ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n\nCONTENT;\n\nforeach ( $rows as $row ):\n$return .= <<<CONTENT\n\n\t<li class='ipsGrid_span4 ipsPhotoPanel ipsPhotoPanel_mini ipsClearfix ipsPad_half'>\n\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\" )->userPhoto( \\IPS\\Member::load( $row['member_id'] ), 'mini' );\n$return .= <<<CONTENT\n\n\t\t<div>\n\t\t\t<h3 class='ipsType_normal ipsType_reset ipsTruncate ipsTruncate_line'>\nCONTENT;\n\n$return .= htmlspecialchars( \\IPS\\Member::load( $row['member_id'] )->name, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n<\/h3>\n\t\t\t<span class='ipsType_light'>\nCONTENT;\n\n$val = ( $row['dateview'] instanceof \\IPS\\DateTime ) ? $row['dateview'] : \\IPS\\DateTime::ts( $row['dateview'] );$return .= (string) $val;\n$return .= <<<CONTENT\n<\/span>\n\t\t<\/div>\n\t<\/li>\n\nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_whoReadTheTopicRows\" );\n\t\t}\n\t\treturn $return;\n}\n\n\tfunction whoReadTheTopicTable( $table, $headers, $rows, $quickSearch ) {\n\t\t$return = '';\n\t\ttry\n\t\t{\n\t\t\t$return .= <<<CONTENT\n\n<div data-baseurl='\nCONTENT;\n$return .= htmlspecialchars( $table->baseUrl, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-resort='\nCONTENT;\n$return .= htmlspecialchars( $table->resortKey, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-controller='core.global.core.table' \nCONTENT;\n\nif ( $table->getPaginationKey() != 'page' ):\n$return .= <<<CONTENT\ndata-pageParam='\nCONTENT;\n$return .= htmlspecialchars( $table->getPaginationKey(), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n'\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n>\n\n\t\nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n\t\t\t<div data-role=\"tablePagination\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit, TRUE, $table->getPaginationKey() );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\n\n\t\nCONTENT;\n\nif ( count( $rows ) ):\n$return .= <<<CONTENT\n\n\t\t<ol class='ipsGrid ipsGrid_collapsePhone ipsPad ipsClear \nCONTENT;\n\nforeach ( $table->classes as $class ):\n$return .= <<<CONTENT\n\nCONTENT;\n$return .= htmlspecialchars( $class, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n \nCONTENT;\n\nendforeach;\n$return .= <<<CONTENT\n' id='elTable_\nCONTENT;\n$return .= htmlspecialchars( $table->uniqueId, ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' data-role=\"tableRows\" itemscope itemtype=\"http:\/\/schema.org\/ItemList\">\n\t\t\t\nCONTENT;\n\n$return .= $table->rowsTemplate[0]->{$table->rowsTemplate[1]}( $table, $headers, $rows );\n$return .= <<<CONTENT\n\n\t\t<\/ol>\n\t\nCONTENT;\n\nelse:\n$return .= <<<CONTENT\n\n\t\t<div class='ipsType_center ipsPad'>\n\t\t\t<p class='ipsType_large ipsType_light'>\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'no_rows_in_table', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n<\/p>\n\t\t\t\nCONTENT;\n\nif ( method_exists( $table, 'container' ) AND $table->container() !== NULL ):\n$return .= <<<CONTENT\n\n\t\t\t\t\nCONTENT;\n\nif ( $table->container()->can('add') ):\n$return .= <<<CONTENT\n\n\t\t\t\t\t<a href='\nCONTENT;\n$return .= htmlspecialchars( $table->container()->url()->setQueryString( 'do', 'add' ), ENT_QUOTES | \\IPS\\HTMLENTITIES, 'UTF-8', FALSE );\n$return .= <<<CONTENT\n' class='ipsButton ipsButton_primary ipsButton_medium'>\n\t\t\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Member::loggedIn()->language()->addToStack( htmlspecialchars( 'submit_first_row', \\IPS\\HTMLENTITIES, 'UTF-8', FALSE ), TRUE, array(  ) );\n$return .= <<<CONTENT\n\n\t\t\t\t\t<\/a>\n\t\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n\t\t\t\t\n\t\nCONTENT;\n\nif ( $table->pages > 1 ):\n$return .= <<<CONTENT\n\n\t\t<div class=\"ipsButtonBar ipsPad_half ipsClearfix ipsClear\">\n\t\t\t<div data-role=\"tablePagination\">\n\t\t\t\t\nCONTENT;\n\n$return .= \\IPS\\Theme::i()->getTemplate( \"global\", \"core\", 'global' )->pagination( $table->baseUrl, $table->pages, $table->page, $table->limit, TRUE, $table->getPaginationKey() );\n$return .= <<<CONTENT\n\n\t\t\t<\/div>\n\t\t<\/div>\n\t\nCONTENT;\n\nendif;\n$return .= <<<CONTENT\n\n<\/div>\nCONTENT;\n\n\t\t}\n\t\tcatch ( \\Exception $exception )\n\t\t{\n\t\t\t\\IPS\\Log::log( $exception, \"template_whoReadTheTopicTable\" );\n\t\t}\n\t\treturn $return;\n}}"
VALUE;
